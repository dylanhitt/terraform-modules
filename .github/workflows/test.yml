name: Test

on: push

jobs:
  Format:
    name: Fromat Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-go@v1
        with:
          go-version: 1.18

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7

      - name: Terraform fmt
        run: terraform fmt -check -recursive

      - name: Go fmt
        run: |-
          echo "If job fails reformat listed files with 'go fmt'."
          gofmt -l .
          test -z "$(gofmt -l .)"

  Validate:
    name: Validate
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: ["aws/eks", "aws/iam"]
    steps:
      - uses: actions/checkout@v1

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7

      - name: Validate
        run: make -C ${{ matrix.dir }} validate-all

  Test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: ["aws/eks", "aws/iam"]
    steps:
      - uses: actions/checkout@v1

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7

      - name: Validate
        run: make -C ${{ matrix.dir }} test

    # - name: Run Go Tests
    #   working-directory: test
    #   run: go test -v -tags=unit
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
